<?php

namespace app\api\controller;

use app\common\controller\Commoncontract;
use app\common\controller\Commoninfo;
use app\common\controller\Commontemplate;
use think\Controller;
use think\Db;

class Template extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Methods:POST, GET, PUT, DELETE, OPTIONS');
        header('Access-Control-Allow-Credentials: true');
        header('Access-Control-Allow-Headers:*');
        header('Access-Control-Expose-Headers: *');
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月10月 11:40:11
     * ps:操作模版（添加、修改）
     * url:{{URL}}/index.php/api/template/operatetemplate
     */
    public function operatetemplate(){
        $templateId = input('param.templateId');
        $type = input('param.type');
        $typeId = input('param.typeId');
        $file = input('param.file');
        $filename = input('param.filename');

        $name = input('param.name');
        $templateNo = input('param.templateNo');
        $imglist = input('param.imglist');
        $imglistname = input('param.imglistname');

        $page = input('param.page');
        $sealpage = input('param.sealpage');
        if(!$type){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        if(!$typeId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        if(!$file){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        if(!$templateId){
            //查询状态余额是否充足
            $account = Db::name('account')->where('type','=',$type)->where('type_id','=',$typeId)->find();
            if($account['template'] < 1){
                ajaxReturn(['code'=>330,'msg'=>'账户余额不足，无法生成合同']);
            }
        }
        $data['type_id'] = $typeId;
        $data['type'] = $type;
        $data['file'] = $file;
        $data['name'] = $name;
        $data['templateNo'] = $templateNo;
        $data['imglist'] = $imglist;
        $data['page'] = $page;
        $data['sealpage'] = $sealpage;
        $data['filename'] = $filename;
        $data['imglistname'] = $imglistname;

        $commontemplate = new Commontemplate();
        if($templateId){
            $data['updatetime'] = time();
            $commontemplate->operatetemplate($data,$type,$typeId,$templateId);
        }else{
            $data['state'] = 0;
            $data['createtime'] = time();
            $templateId = $commontemplate->operatetemplate($data,$type,$typeId);


        }
        ajaxReturn(['code'=>200,'msg'=>'操作成功','templateId'=>$templateId]);
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月10月 13:42:05
     * ps:操作模版内容
     * url:{{URL}}/index.php/api/template/operatetemplatecontent
     */
    public function operatetemplatecontent(){
        $templateId = input('param.templateId');
        $list = input('param.list');
        if(!$templateId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $template = Db::name('template')->where('id','=',$templateId)->find();
        if($template['state'] != 0){
            ajaxReturn(['code'=>301,'msg'=>'添加失败']);
        }
        $commontemplate = new Commontemplate();
        $row = json_decode($list,true);

        foreach($row as $k=>$v){
            $ids = null;
            $data['template_id'] = $templateId;
            $data['name'] = $v['name'];
            $data['type'] = $v['type'];
            $data['describe'] = $v['describe'];
            if(isset($v['contentId'])){
                if($v['contentId']){
                    $ids = $v['contentId'];
                }
            }
            $commontemplate->operatecontent($data,$ids);
        }
        ajaxReturn(['code'=>200,'msg'=>'操作成功']);
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月10月 13:57:11
     * ps:获取模版全部信息
     * url:{{URL}}/index.php/api/template/gettemplate
     */
    public function gettemplate(){
        $templateId = input('param.templateId');
        if(!$templateId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $template = Db::name('template')->where('id','=',$templateId)->find();
        $data = array();
        $data['templateId'] = $template['id'];
        $data['typeId'] = $template['type_id'];
        $data['type'] = $template['type'];
        $data['file'] = $template['file'];
        $data['filename'] = $template['filename'];

        $data['state'] = $template['state'];
        switch($template['state']){
            case 0:
                $data['stateName'] = '待生成';
                break;
            case 1:
                $data['stateName'] = '生成中';
                break;
            case 2:
                $data['stateName'] = '启用中';
                break;
            case 3:
                $data['stateName'] = '已停用';
                break;
        }
        $commoninfo = new Commoninfo();
        $data['name'] = $template['name'];
        $data['classifyId'] = $template['classify_id'];
        $data['classifyName'] = $commoninfo->gettemclassify($template['classify_id'],'name')['name'];

        $data['templateNo'] = $template['templateNo'];
        $data['imglist'] = $template['imglist'];
        $data['imglistname'] = $template['imglistname'];

        $data['page'] = $template['page'];
        $data['sealpage'] = $template['sealpage'];
        $data['createtime'] = date('Y-m-d H:i:s',$template['createtime']);
        $data['contract'] = array();
        $data['signing'] = array();

        $contract = Db::name('template_content')
            ->where('template_id','=',$templateId)
            ->where('type','<>',6)
            ->where('type','<>',5)
            ->order('weight desc,id asc')
            ->select();
        foreach($contract as $k=>$v){
            $data['contract'][$k]['contractId'] = $v['id'];
            $data['contract'][$k]['name'] = $v['name'];
            $data['contract'][$k]['describe'] = $v['describe'];
            $data['contract'][$k]['type'] = $v['type'];
            $data['contract'][$k]['must'] = $v['must'];
            $data['contract'][$k]['self'] = $v['self'];

            switch($v['type']){

                case 1:
                    $data['contract'][$k]['typeName'] ='文本';
                    break;
                case 2:
                    $data['contract'][$k]['typeName'] ='日期';
                    break;
                case 3:
                    $data['contract'][$k]['typeName'] ='图片';
                    break;

                case 4:
                    $data['contract'][$k]['typeName'] ='备注';
                    break;
            }
            $data['contract'][$k]['createtime'] = date('Y-m-d H:i:s',$v['createtime']);
            $data['contract'][$k]['content'] = '';
        }
        $signing = Db::name('template_content')
            ->where('template_id','=',$templateId)
            ->where('type','<>',1)
            ->where('type','<>',2)
            ->where('type','<>',3)
            ->where('type','<>',4)
            ->order('weight desc,id asc')
            ->select();
        foreach($signing as $k=>$v){
            $data['signing'][$k]['contractId'] = $v['id'];
            $data['signing'][$k]['title'] = $v['name'];
            $data['signing'][$k]['describe'] = $v['describe'];
            $data['signing'][$k]['must'] = $v['must'];

            switch($v['type']){
                case 5:
                    $data['signing'][$k]['typeName'] ='个人';
                    $data['signing'][$k]['type'] = 'custom';

                    break;
                case 6:
                    $data['signing'][$k]['typeName'] ='企业';
                    $data['signing'][$k]['type'] = 'enterprise';

                    break;

            }
            $data['signing'][$k]['createtime'] = date('Y-m-d H:i:s',$v['createtime']);
        }
        ajaxReturn(['code'=>200,'msg'=>'获取成功','data'=>$data]);
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月10月 14:17:46
     * ps:获取模版列表
     * url:{{URL}}/index.php/api/template/gettemplatelist
     */
    public function gettemplatelist(){
        $type = input('param.type');
        $typeId = input('param.typeId');
        $classifyId = input('param.classifyId');
        $state = input('param.state');

//        if(!$type){
//            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
//        }
//        if(!$typeId){
//            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
//        }
        $where = array();
        if($classifyId){
            $where['classify_id'] = $classifyId;
        }
        if($state == 1){
            $where['state'] = 2;
        }
        if($typeId){
            $template = Db::name('template')->where('type','=',$type)->where($where)->where('type_id','=',$typeId)->order('id desc')->select();
        }else{
            $template = Db::name('template')->where($where)->where('type_id','=',0)->order('id desc')->select();
        }
        $data = array();
        foreach($template as $k=>$v){
            $data[$k]['templateId'] = $v['id'];
            $data[$k]['name'] = $v['name'];
            $data[$k]['templateNo'] = $v['templateNo'];
            $data[$k]['state'] = $v['state'];
            switch($v['state']){
                case 0:
                    $data[$k]['stateName'] = '待生成';
                    break;
                case 1:
                    $data[$k]['stateName'] = '生成中';
                    break;
                case 2:
                    $data[$k]['stateName'] = '启用中';
                    break;
                case 3:
                    $data[$k]['stateName'] = '已停用';
                    break;
            }
            $data[$k]['file'] = $v['file'];

            $data[$k]['imglist'] = $v['imglist'];
            $data[$k]['page'] = $v['page'];
            $data[$k]['sealpage'] = $v['sealpage'];
            $data[$k]['createtime'] = date('Y-m-d H:i:s',$v['createtime']);
        }

        ajaxReturn(['code'=>200,'msg'=>'获取成功','data'=>$data]);
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年10月22月 16:00:11
     * ps:获取模板分类列表
     * url:{{URL}}/index.php/api/template/temclassifylist
     */
    public function temclassifylist(){
        $type = input('param.type');
        $typeId = input('param.typeId');
        $page = input('param.page');
        $limit = input('param.limit');
        if(!$limit){
            $limit = 10;
        }
        if($typeId){
            $classify = Db::name('template_classify')->where('type','=',$type)->where('type_id','=',$typeId)->page($page,$limit)->order('id desc')->select();
            $count = Db::name('template_classify')->where('type','=',$type)->where('type_id','=',$typeId)->count();
        }else{
            $classify = Db::name('template_classify')->where('type_id','=',0)->page($page,$limit)->order('id desc')->select();
            $count = Db::name('template_classify')->where('type_id','=',0)->count();
        }
        $data = array();
        foreach($classify as $k=>$v){
            $data[$k]['classifyId'] = $v['id'];

            $data[$k]['name'] = $v['name'];
        }
        $sumpage = 0;
        $sumpage  = ceil($count/$limit);
        ajaxReturn(['code'=>200,'msg'=>'获取成功','data'=>$data,'page'=>$page,'limit'=>$limit,'sum_page'=>$sumpage]);
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年10月22月 16:09:21
     * ps:操作分类内容
     * url:{{URL}}/index.php/api/template/opeateclassify
     */
    public function opeateclassify(){
        $type = input('param.type');
        $typeId = input('param.typeId');
        $classifyId = input('param.classifyId');
        $name = input('param.name');
        if(!$name){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $data['name'] = $name;
        if($classifyId){
            $data['updatetime'] = time();
            Db::name('template_classify')->where('id','=',$classifyId)->update($data);
        }else{
            $data['type'] = $type;
            $data['type_id'] = $typeId;
            $data['createtime'] = time();
            Db::name('template_classify')->insertGetId($data);
        }
        ajaxReturn(['code'=>200,'msg'=>'操作成功']);
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年10月22月 16:09:21
     * ps:删除分类内容
     * url:{{URL}}/index.php/api/template/delclassify
     */
    public function delclassify(){
        $classifyId = input('param.classifyId');
        if(!$classifyId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        Db::name('template_classify')->where('id','=',$classifyId)->delete();
        ajaxReturn(['code'=>200,'msg'=>'操作成功']);
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年10月24月 15:42:51
     * ps:获取模板预览链接
     * url:{{URL}}/index.php/api/template/gettemplateurl
     */
    public function gettemplateurl(){
        $templateId = input('param.templateId');
        if(!$templateId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $commontemplate = new Commontemplate();
        $res = $commontemplate->gettemplateurl($templateId);
        if($res['code'] == 200){
            ajaxReturn(['code'=>200,'msg'=>'获取成功','url'=>$res['url']]);
        }else{
            ajaxReturn(['code'=>302,'msg'=>$res['msg']]);
        }
    }
}