<?php
/**
 * Created by PhpStorm.
 * User:lang
 * time:2024年11月04月 13:43:05
 * ps:合伙人
 */
namespace app\api\controller;

use app\common\controller\Commonattestation;
use app\common\controller\Commoninfo;
use app\common\controller\Commonservice;
use app\common\controller\Commonuser;
use think\Controller;
use think\Db;

class Service extends Gathercontroller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Methods:POST, GET, PUT, DELETE, OPTIONS');
        header('Access-Control-Allow-Credentials: true');
        header('Access-Control-Allow-Headers:*');
        header('Access-Control-Expose-Headers: *');
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年11月04月 13:46:13
     * ps:申请成为合伙人
     * url:{{URL}}/index.php/api/service/applyfor
     */
    public function applyfor(){
        $type = input('param.type');
        $typeId = input('param.typeId');
        $name = input('param.name');
        $phone = input('param.phone');
        if(!$type || !$typeId || !$name || !$phone){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $service = Db::name('service')->where('type','=',$type)->where('type_id','=',$typeId)->find();
        if($service){
            ajaxReturn(['code'=>301,'msg'=>'已申请，请勿重复申请']);
        }
        $common =new \app\common\controller\Common();
        $data['type'] = $type;
        $data['type_id'] = $typeId;
        $data['name'] = $name;
        $data['phone'] = $phone;
        $data['createtime'] = time();
        $data['identifier'] =$common->userNo('',1);
        Db::name('service')->insertGetId($data);
        ajaxReturn(['code'=>200,'msg'=>'申请成功']);
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年11月04月 14:49:01
     * ps:销售备案
     * url:{{URL}}/index.php/api/service/salesfiling
     */
    public function salesfiling(){
        $type = input('param.type');
        $typeId = input('param.typeId');
        $name = input('param.name');
        $phone = input('param.phone');
        $customtype = input('param.customtype');
        if(!$type || !$typeId || !$name || !$customtype){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $service = Db::name('service')->where('type','=',$type)->where('type_id','=',$typeId)->find();
        if(!$service){
            ajaxReturn(['code'=>301,'msg'=>'资质不足，无法备案']);
        }
        $filing = Db::name('service_filing')->where('name','=',$name)->find();
        if($filing){
            ajaxReturn(['code'=>302,'msg'=>'客户已存在，请勿重复备案']);
        }else{
            if($customtype == 'custom'){
                $user = Db::name('custom')->where('name','=',$name)->find();
            }else{
                $user = Db::name('enterprise')->where('name','=',$name)->find();
            }
            if($user['service']){
                ajaxReturn(['code'=>302,'msg'=>'客户已备案，请勿重复备案']);
            }
        }
        $data['service_id'] = $service['id'];
        $data['name'] = $name;
        $data['phone'] = $phone;
        $data['type'] = $customtype;
        $data['createtime'] = time();
        $filingId = Db::name('service_filing')->insertGetId($data);
        $commonservice = new Commonservice();
        $commonservice->binduser($filingId);
        ajaxReturn(['code'=>200,'msg'=>'备案成功']);
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年11月05月 10:03:54
     * ps:客户列表
     * url:{{URL}}/index.php/api/service/clientlist
     */
    public function clientlist(){
        $type = input('param.type');
        $typeId = input('param.typeId');
        $search = input('search');
//        $state = input('state');
        $page = input('page');
        $limit = input('limit');
        if(!$limit){
            $limit = 10;
        }
        if(!$type || !$typeId ){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $service = Db::name('service')->where('type','=',$type)->where('type_id','=',$typeId)->find();
        $whereor = '';
        if($search){
            $whereor = "`contract`.`name` LIKE '%$search%'";
        }

        //个人
        $filing = Db::name('service_filing')
            ->where($whereor)
            ->where('service_id','=',$service['id'])
            ->order('id desc')
            ->page($page,$limit)
            ->select();
        $count = Db::name('service_filing')
            ->where($whereor)
            ->where('service_id','=',$service['id'])
            ->order('id desc')
            ->page($page,$limit)
            ->count();
        $data = array();
        foreach($filing as $k=>$v){
            $data[$k]['name'] = trim($v['name']);
            $data[$k]['phone'] = trim($v['phone']);
            $data[$k]['type'] = trim($v['type']);
            $data[$k]['type_id'] = trim($v['type_id']);
            $data[$k]['purchase'] = trim($v['purchase']);
            $data[$k]['createtime'] = trim(date('Y-m-d H:i',$v['createtime']));
        }
        $sumpage = 0;
        $sumpage  = ceil($count/$limit);
        ajaxReturn(['code'=>200,'msg'=>'获取成功','data'=>$data,'page'=>$page,'limit'=>$limit,'sum_page'=>$sumpage]);
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年11月05月 14:16:36
     * ps:分佣列表
     * url:{{URL}}/index.php/api/service/commissionlist
     */
    public function commissionlist(){
        $type = input('param.type');
        $typeId = input('param.typeId');
        $page = input('page');
        $limit = input('limit');
        if(!$limit){
            $limit = 10;
        }
        if(!$type || !$typeId ){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $service = Db::name('service')->where('type','=',$type)->where('type_id','=',$typeId)->find();
        $com = Db::name('order as o')
            ->join('commission','commission.order_id = o.id')
            ->join('goods','o.goods_id = goods.id')
            ->where('commission.service_id','=',$service['id'])
            ->order('commission.id desc')
            ->field('o.orderNo,o.paytime,o.number,o.totalprice,o.type,o.type_id,commission.price as comprice,commission.state as comstate,commission.updatetime as comupdatetime,goods.name,goods.image')
            ->page($page,$limit)
            ->select();
        $count = Db::name('order as o')
            ->join('commission','commission.order_id = o.id')
            ->join('goods','o.goods_id = goods.id')
            ->where('commission.service_id','=',$service['id'])
            ->count();

        $data = array();
        $commoninfo = new Commoninfo();
        foreach($com as $k=>$v){
            $data[$k]['orderNo'] = $v['orderNo'];
            $data[$k]['goodsName'] = $v['name'];
            $data[$k]['goodsImage'] = $v['image'];
            $data[$k]['paytime'] = date('Y-m-d H:i:s',$v['paytime']);
            $data[$k]['number'] = $v['number'];
            $data[$k]['totalprice'] = $v['totalprice'];
            if($v['type'] == 'custom'){
                $data[$k]['name'] = $commoninfo->getcustom($v['type_id'],'name')['name'];
            }else{
                $data[$k]['name'] = $commoninfo->getenter($v['type_id'],'name')['name'];
            }
            $data[$k]['comprice'] = $v['comprice'];
            $data[$k]['comstate'] = $v['comstate'];
            if($v['comstate'] == 0){
                $data[$k]['comstateName'] = '未分佣';
            }else if($v['comstate'] == 1){
                $data[$k]['comstateName'] = '已分佣';
            }else if($v['comstate'] == 2){
                $data[$k]['comstateName'] = '不分佣';
            }
            $data[$k]['totalprice'] = $v['totalprice'];
            if($v['comupdatetime']){
                $data[$k]['comupdatetime'] = date('Y-m-d H:i:s',$v['comupdatetime']);
            }else{
                $data[$k]['comupdatetime'] = '';
            }
        }
        $sumpage = 0;
        $sumpage  = ceil($count/$limit);
        ajaxReturn(['code'=>200,'msg'=>'获取成功','data'=>$data,'page'=>$page,'limit'=>$limit,'sum_page'=>$sumpage]);
    }
}