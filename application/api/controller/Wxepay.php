<?php
namespace app\api\controller;


use think\Db;

class Wxepay{
    private $appid;
    private $secret;
    private $mch_id;
    private $key;
    private $serial_no;

    const KEY_LENGTH_BYTE = 32;
    const AUTH_TAG_LENGTH_BYTE = 16;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Methods:POST, GET, PUT, DELETE, OPTIONS');
        header('Access-Control-Allow-Credentials: true');
        header('Access-Control-Allow-Headers:x-requested-with,Content-Type,X-CSRF-Token,token');
        header('Access-Control-Expose-Headers: *');
        $this->appid = 'wx9619f41db13a6ecf';//小程序appid
        $this->secret = 'e0ec83c8a0d7658fcccd871230b74300';//小程序secret
        $this->mch_id ='1443632902';//商户id
        $this->key = '33F139033BAA7D287D0BEE22759FC698';//v3key
        $this->serial_no ='4F29A7B64D795DD1EB73B80DDF998E3DB0F8E296';//v3序列号
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月27月 14:00:28
     * ps:native调起支付
     */
    public function nativeorder($qqdata=''){

        $url = "https://api.mch.weixin.qq.com/v3/pay/transactions/native";
        $urlarr = parse_url($url);
        $appid = 'wx9619f41db13a6ecf';
        $mchid = '1443632902';;//
        $xlid = '4F29A7B64D795DD1EB73B80DDF998E3DB0F8E296';//秘钥序列号
        $data = [];
        $time = time();
        $data['appid'] = 'wx9619f41db13a6ecf';
        $data['mchid'] = '1443632902';
//        $data['sub_appid'] = '';
//        $data['sub_mchid'] = '';

        $data['description'] =$qqdata['goodsName'];//商品描述
        $data['out_trade_no'] =$qqdata['orderNo'];//订单编号
        $data['amount']['total'] =$qqdata['price']*100;//金额 单位 分
        $data['notify_url'] = "https://sign.obsend.com/index.php/index/epaynotify";//回调接口 需根据自己的情况修改

        $data = json_encode($data);
        $noncestr = $time;
        $key = $this->getSign($data, $urlarr['path'], $noncestr, $time);//签名
        $token = sprintf('mchid="%s",serial_no="%s",nonce_str="%s",timestamp="%d",signature="%s"', $mchid, $xlid, $noncestr, $time, $key);//头部信息
        $header = [
            'Content-Type:' . 'application/json; charset=UTF-8',
            'Accept:application/json',
            'User-Agent:*/*',
            'Authorization: WECHATPAY2-SHA256-RSA2048 ' . $token
        ];
        $ret = $this->curl_post_https($url, $data, $header);
        $rest = json_decode($ret,true);

        if(isset($rest['code_url'])){
            return $rest['code_url'];
        }else{
            return false;
        }

    }



    //微信支付签名
    public function getSign($data = [], $url, $randstr, $time)
    {
        $str = "POST" . "\n" . $url . "\n" . $time . "\n" . $randstr . "\n" . $data . "\n";
        $key = file_get_contents('cert/apiclient_key.pem');//在商户平台下载的秘钥
        $str = $this->getSha256WithRSA($str, $key);
        return $str;
    }

    //调起支付的签名
    public function getWechartSign($appid, $timeStamp, $noncestr, $prepay_id)
    {
        $str = $appid . "\n" . $timeStamp . "\n" . $noncestr . "\n" . $prepay_id . "\n";
        $key = file_get_contents('cert/apiclient_key.pem');
        $str = $this->getSha256WithRSA($str, $key);
        return $str;
    }

    public function getSha256WithRSA($content, $privateKey)
    {
        $binary_signature = "";
        $algo = "SHA256";
        openssl_sign($content, $binary_signature, $privateKey, $algo);
        $sign = base64_encode($binary_signature);
        return $sign;
    }

    /* PHP CURL HTTPS POST */
    public function curl_post_https($url, $data, $header)
    {
        $action = curl_init();
        curl_setopt($action, CURLOPT_URL, $url);
        curl_setopt($action, CURLOPT_CONNECTTIMEOUT, 60);
        curl_setopt($action, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($action, CURLOPT_HEADER, 0);
        curl_setopt($action, CURLOPT_SSL_VERIFYPEER, 0);
        curl_setopt($action, CURLOPT_SSL_VERIFYHOST, 0);
        curl_setopt($action, CURLOPT_POST, 1);
        curl_setopt($action, CURLOPT_POSTFIELDS, $data);
        curl_setopt($action, CURLOPT_HTTPHEADER, $header);
        $result = curl_exec($action);
        curl_close($action);
        return $result;
    }


    public static function wx_post($url, $param)
    {
        $authorization = self::getV3Sign($url, "POST", $param);
        $curl = curl_init();
        $headers = [
            'Authorization:' . $authorization,
            'Accept:application/json',
            'Content-Type:application/json;charset=utf-8',
            'User-Agent:Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36',
        ];
        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_TIMEOUT, 500);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_POSTFIELDS, $param);
        curl_setopt($curl, CURLOPT_POST, true);
        $res = curl_exec($curl);
        curl_close($curl);
        return $res;
    }



    public static function getV3Sign($url, $http_method, $body)
    {
        $nonce = strtoupper(self::createNonceStr(32));
        $timestamp = time();
        $url_parts = parse_url($url);
        $canonical_url = ($url_parts['path'] . (!empty($url_parts['query']) ? "?${url_parts['query']}" : ""));
        $cert_dir = 'cert/'; //绝对路径
        $sslKeyPath = $cert_dir."apiclient_key.pem";
        //拼接参数
        $message = $http_method . "\n" .
            $canonical_url . "\n" .
            $timestamp . "\n" .
            $nonce . "\n" .
            $body . "\n";
        $private_key = self::getPrivateKey($sslKeyPath);
        openssl_sign($message, $raw_sign, $private_key, 'sha256WithRSAEncryption');
        $sign   = base64_encode($raw_sign);
        $token = sprintf('WECHATPAY2-SHA256-RSA2048 mchid="%s",nonce_str="%s",timestamp="%s",serial_no="%s",signature="%s"', "1443632902", $nonce, $timestamp, "4F29A7B64D795DD1EB73B80DDF998E3DB0F8E296", $sign);
        return $token;
    }



    public static function createNonceStr($length = 16) { //生成随机16个字符的字符串
        $chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        $str = "";
        for ($i = 0; $i < $length; $i++) {
            $str .= substr($chars, mt_rand(0, strlen($chars) - 1), 1);
        }
        return $str;
    }


    public static function getPrivateKey($filepath = '')
    {
        if (empty($filepath)) {
            //私钥位置
            $cert_dir = 'cert/';
            $filepath = $cert_dir."apiclient_key.pem";
        }
        return openssl_get_privatekey(file_get_contents($filepath));
    }


}