<?php

namespace app\api\controller;

use app\common\controller\Commonattestation;
use app\common\controller\Commonorder;
use app\common\controller\Commonuser;
use think\Controller;
use think\Db;

class Order extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Methods:POST, GET, PUT, DELETE, OPTIONS');
        header('Access-Control-Allow-Credentials: true');
        header('Access-Control-Allow-Headers:*');
        header('Access-Control-Expose-Headers: *');
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月11月 14:27:05
     * ps:生成订单
     * url:{{URL}}/index.php/api/order/addorder
     */
    public function addorder(){
        $type = input('param.type');
        $typeId = input('param.typeId');
        $goodsId = input('param.goodsId');
        $price = input('param.price');
        $number = input('param.number');
//        $assertTime = input('param.assertTime');
        if(!$type || !$typeId || !$goodsId || !$price || !$number){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        if($type == 'custom'){
            //个人
            $user = Db::name('custom')->where('id','=',$typeId)->find();
        }else{
            //企业
            $user = Db::name('enterprise')->where('id','=',$typeId)->find();
        }
        if(!$user){
            ajaxReturn(['code'=>301,'msg'=>'用户不存在']);
        }
        $goods = Db::name('goods')->where('id','=',$goodsId)->find();
        $data['orderNo'] = $this->orderNo();
        $data['goods_id'] = $goodsId;
        $data['type'] = $type;
        $data['type_id'] = $typeId;
        $data['price'] = $price;
        $data['paystatus'] = 0;
        $data['state'] = 1;
//        $data['assertTime'] = strtotime($assertTime);
        $data['createtime'] = time();
        $data['totalprice'] = $goods['price']*$number;
        $data['number'] = $number;
        $orderId = Db::name('order')->insertGetId($data);
        ajaxReturn(['code'=>200,'msg'=>'下单成功','orderId'=>$orderId]);
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月11月 15:33:02
     * ps:订单列表
     * url:{{URL}}/index.php/api/order/orderlist
     */
    public function orderlist(){
        $type = input('param.type');
        $typeId = input('param.typeId');
        if(!$type && !$typeId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $order = Db::name('order as o')
            ->join('goods','goods.id=o.goods_id')
            ->where('type','=',$type)
            ->where('type_id','=',$typeId)
            ->where('paystatus','=',1)
            ->order('o.id desc')
            ->field('o.id as orderId,o.createtime as ordercreatetime,o.*,goods.*')
            ->select();
        $data = array();
        foreach($order as $k=>$v){
            $data[$k]['orderId'] = $v['orderId'];
            $data[$k]['orderNo'] = $v['orderNo'];
            $data[$k]['goodsId'] = $v['goods_id'];
            $data[$k]['price'] = $v['price'];
            $data[$k]['totalprice'] = $v['totalprice'];
            $data[$k]['number'] = $v['number'];
            $data[$k]['paytime'] = date('Y-m-d H:i:s',$v['paytime']);
            if($v['paytime']){
                $data[$k]['assertTime'] = date('Y-m-d',strtotime('+1 year', $v['paytime']));

            }else{
                $data[$k]['assertTime'] = '';

            }
            $data[$k]['createtime'] = date('Y-m-d H:i:s',$v['createtime']);
            $data[$k]['goodsName'] = $v['name'];
            $data[$k]['image'] = $v['image'];
            $data[$k]['contract'] = $v['contract']*$v['number'];
            $data[$k]['template'] = $v['template']*$v['number'];
        }
        ajaxReturn(['code'=>200,'msg'=>'获取成功','data'=>$data]);
    }
    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月11月 15:18:22
     * ps:生成订单编号
     */
    public function orderNo(){
        $prefix = 'ST'; // 订单编号前缀
        $suffix = date('Ymd'); // 当前日期作为后缀
        $randomDigits = $this->generateRandomDigits(6); // 生成6位随机数字

        $orderNumber = $prefix . $suffix . $randomDigits;
        $order = Db::name('order')->where('orderNo','=',$orderNumber)->find();
        if($order){
            $orderNumber = $this->orderNo();
        }
        return $orderNumber;
    }
    function generateRandomDigits($length) {
        $digits = '';
        $chars = '0123456789';

        for ($i = 0; $i < $length; $i++) {
            $digits .= $chars[rand(0, strlen($chars) - 1)];
        }
        return $digits;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年11月11月 10:12:44
     * ps:获取订单详情
     * url:{{URL}}/index.php/api/order/getorderdetails
     */
    public function getorderdetails(){
        $orderId = input('param.orderId');
        if(!$orderId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $order = Db::name('order as o')
            ->join('goods','goods.id = o.goods_id')
            ->where('o.id','=',$orderId)
            ->field('o.*,goods.name,goods.image,goods.contract,goods.contract,goods.template')
            ->find();
        $data = array();
        $data['orderId'] = $order['id'];
        $data['goodsId'] = $order['goods_id'];
        $data['goodsName'] = $order['name'];
        $data['image'] = $order['image'];
        $data['contract'] = $order['contract']*$order['number'];
        $data['template'] = $order['template']*$order['number'];

        $data['orderNo'] = $order['orderNo'];
        $data['type'] = $order['type'];
        $data['typeId'] = $order['type_id'];
        $data['price'] = $order['price'];
        $data['totalprice'] = $order['totalprice'];
        $data['number'] = $order['number'];
        if($order['paytime']){
            $data['paytime'] = date('Y-m-d H:i:s',$order['paytime']);
        }else{
            $data['paytime'] = '';
        }
        $data['paystatus'] = $order['paystatus'];
        if($order['paystatus'] == 0){
            $data['paystatusName'] = '未支付';
        }else if($order['paystatus'] == 1){
            $data['paystatusName'] = '已支付';
        }else if($order['paystatus'] == 2){
            $data['paystatusName'] = '已退款';
        }
        $data['state'] = $order['state'];
        if($order['state'] == 0){
            $data['stateName'] = '待确认';
        }else if($order['state'] == 1){
            $data['stateName'] = '待支付';
        }else if($order['state'] == 2){
            $data['stateName'] = '已支付';
        }else if($order['state'] == 3){
            $data['stateName'] = '已完成';
        }else if($order['state'] == 4){
            $data['stateName'] = '已取消';
        }
        $data['createtime'] = date('Y-m-d H:i:s',$order['createtime']);
        ajaxReturn(['code'=>200,'msg'=>'获取成功','data'=>$data]);
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年11月05月 11:43:48
     * ps:订单支付
     * url:{{URL}}/index.php/api/order/payorder
     */
    public function payorder(){
        $orderId = input('param.orderId');
        if(!$orderId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $order = Db::name('order')->where('id','=',$orderId)->find();
        if($order['paystatus'] != 0){
            ajaxReturn(['code'=>301,'msg'=>'订单已支付，请勿重复支付']);
        }
        if($order['wxurl']){
            $res['url'] = $order['wxurl'];
        }else{
            $commonorder = new Commonorder();
            $res = $commonorder->nativeorder($orderId);
            if($res['code'] != 200){
                ajaxReturn(['code'=>302,'msg'=>'支付发起失败']);
            }
        }

        ajaxReturn(['code'=>200,'msg'=>'发起成功','url'=>$res['url']]);
    }


}