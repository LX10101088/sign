<?php

namespace app\api\controller;

use app\common\controller\Commonattestation;
use app\common\controller\Commonuser;
use think\Controller;
use think\Db;

class Custom extends Gathercontroller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Methods:POST, GET, PUT, DELETE, OPTIONS');
        header('Access-Control-Allow-Credentials: true');
        header('Access-Control-Allow-Headers:*');
        header('Access-Control-Expose-Headers: *');
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月09月 13:54:20
     * ps:操作个人用户信息(添加、修改)
     * url:{{URL}}/index.php/api/custom/operatecustom
     */
    public function operatecustom(){
        $customId = input('param.customId');
        $name = input('param.name');
        $phone = input('param.phone');
        $identityNo = input('param.identityNo');
        $province = input('param.province');
        $city = input('param.city');
        $area = input('param.area');
        $address = input('param.address');
        $data['name'] = $name;
        $data['identityNo'] = $identityNo;
        $data['province'] = $province;
        $data['city'] = $city;
        $data['area'] = $area;
        $data['address'] = $address;
        $data['phone'] = $phone;
        if(!$phone){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        if($identityNo){
            $identityNoyz = $this->isValidIDCard($identityNo);
            if(!$identityNoyz){
                ajaxReturn(['code'=>301,'msg'=>'请输入正确的身份信息']);
            }
        }
        $commonuser = new Commonuser();
        if($customId){
            $identityNocustom = Db::name('custom')->where('id','<>',$customId)->where('identityNo','=',$identityNo)->find();
            if($identityNocustom){
                ajaxReturn(['code'=>301,'msg'=>'身份信息已存在平台']);
            }
            //传输customId代表修改
            $commonuser->operatecustom($data,$customId);
        }else{
            $identityNocustom = Db::name('custom')->where('identityNo','=',$identityNo)->find();
            if($identityNocustom){
                ajaxReturn(['code'=>301,'msg'=>'身份信息已存在平台']);
            }
            //不传代表添加
            $commonuser->operatecustom($data);
        }
        ajaxReturn(['code'=>200,'msg'=>'操作成功']);
    }

    function isValidIDCard($idCard) {
        // 身份证号码长度校验
        if (strlen($idCard) != 18) {
            return false;
        }

        // 正则表达式校验，前17位为数字，第18位为数字或字母X（不区分大小写）
        if (!preg_match('/^[\d]{17}[\dXx]$/', $idCard)) {
            return false;
        }

        // 校验码计算
        $weights = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];
        $checkCodes = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];

        $sum = 0;
        for ($i = 0; $i < 17; $i++) {
            $sum += intval($idCard[$i]) * $weights[$i];
        }

        $mod = $sum % 11;
        $expectedCheckCode = $checkCodes[$mod];

        // 校验最后一位是否匹配校验码
        return strtoupper($idCard[17]) === $expectedCheckCode;
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月09月 14:04:57
     * ps:获取客户信息
     * url:{{URL}}/index.php/api/custom/getcustom
     */
    public function getcustom(){
        $customId = input('param.customId');
        if(!$customId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $custom = Db::name('custom')->where('id','=',$customId)->find();
        $account = Db::name('account')->where('type_id','=',$customId)->where('type','=','custom')->find();
        $data['logo'] = trim($custom['logo']);
        $data['customId'] = $customId;
        $data['name'] = trim($custom['name']);
        $data['phone'] = trim($custom['phone']);
        $data['identityNo'] = trim($custom['identityNo']);
        $data['province'] = trim($custom['province']);
        $data['city'] = trim($custom['city']);
        $data['area'] = trim($custom['area']);
        $data['address'] = trim($custom['address']);
        $data['attestation'] = trim($custom['attestation']);
        $data['serialNo'] = trim($custom['serialNo']);
        $data['attestationType'] = trim($custom['attestationType']);
        if($custom['finishedTime']){
            $data['finishedTime'] = date('Y-m-d H:i:s',$custom['finishedTime']);
        }else{
            $data['finishedTime'] = '';
        }
        $data['account'] = trim($custom['account']);
        $data['createtime'] =  date('Y-m-d H:i:s',$custom['createtime']);

        $data['template'] = trim($account['template']);
        $data['contract'] = trim($account['contract']);

        ajaxReturn(['code'=>200,'msg'=>'获取成功','data'=>$data]);
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月09月 14:23:15
     * ps:认证
     * url:{{URL}}/index.php/api/custom/attestation
     */
    public function attestation(){
        $customId = input('param.customId');
        $url = input('param.url');

        if(!$customId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $custom = Db::name('custom')->where('id','=',$customId)->find();
        if(!$custom['name'] && !$custom['phone'] && !$custom['identityNo']){
            ajaxReturn(['code'=>301,'msg'=>'信息不全，无法进行认证']);
        }
        $commonattestation = new Commonattestation();
        $res = $commonattestation->custom($custom['id'],$url);
        if($res['code'] == 200){
            ajaxReturn(['code'=>200,'msg'=>'请求成功','url'=>$res['identifyUrl']]);
        }else{
            ajaxReturn(['code'=>303,'msg'=>$res['msg'],'url'=>'']);
        }
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月10月 11:19:23
     * ps:获取个人用户绑定企业
     * url:{{URL}}/index.php/api/custom/getbindenter
     */
    public function getbindenter(){
        $customId = input('param.customId');
        if(!$customId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
//        $custom = Db::name('custom')->where('id','=',$customId)->find();
        $cuen = Db::name('enterprise_custom')->where('custom_id','=',$customId)->order('id asc')->select();
        $data = array();
        $common = new \app\common\controller\Common();
        $custom = $common->getcustom($customId);
        $account = Db::name('account')->where('type','=','custom')->where('type_id','=',$customId)->find();
        $data[0]['name'] = $custom['name'];
        $data[0]['enterId'] = $custom['id'];
        $data[0]['template'] = trim($account['template']);
        $data[0]['contract'] = trim($account['contract']);
        $data[0]['attestation'] = trim($custom['attestation']);
        $data[0]['type'] = 'custom';
        $data[0]['role'] = '管理员';

        foreach($cuen as $k=>$v){
            $enter = Db::name('enterprise')->where('id','=',$v['enterprise_id'])->find();
            $account = Db::name('account')->where('type','=','enterprise')->where('type_id','=',$v['enterprise_id'])->find();
            $data[$k+1]['name'] = $enter['name'];
            $data[$k+1]['enterId'] = $v['enterprise_id'];
            $data[$k+1]['template'] = trim($account['template']);
            $data[$k+1]['contract'] = trim($account['contract']);
            $data[$k+1]['attestation'] = trim($enter['attestation']);
            $data[$k+1]['type'] = 'enterprise';
            $data[$k+1]['role'] = '管理员';

        }
        ajaxReturn(['code'=>200,'msg'=>'获取成功','data'=>$data]);
    }
}