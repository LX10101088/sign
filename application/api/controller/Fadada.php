<?php

namespace app\api\controller;


use FddCloud\bean\req\corp\GetCorpAuthUrlReq;
use FddCloud\bean\req\corp\GetCorpIdentityInfoReq;
use FddCloud\bean\req\corp\GetCorpReq;
use FddCloud\bean\req\doc\FileProcessReq;
use FddCloud\bean\req\doc\FileUploadByUrlReq;
use FddCloud\bean\req\org\member\MemberCreateReq;
use FddCloud\bean\req\org\member\MemberDeleteReq;
use FddCloud\bean\req\org\member\MemberGetDetailReq;
use FddCloud\bean\req\seal\GetAppointedUserSealListReq;
use FddCloud\bean\req\seal\GetCertInfoReq;
use FddCloud\bean\req\seal\GetPersonalSealCreateUrlReq;
use FddCloud\bean\req\seal\GetPersonalSealListReq;
use FddCloud\bean\req\seal\GetSealCreateUrlReq;
use FddCloud\bean\req\seal\GetSealGrantUrlReq;
use FddCloud\bean\req\seal\GetSealListReq;
use FddCloud\bean\req\seal\PersonalSealDeleteReq;
use FddCloud\bean\req\seal\SealDeleteReq;
use FddCloud\bean\req\seal\SealSetStatusReq;
use FddCloud\bean\req\signTask\AbolishSignTaskReq;
use FddCloud\bean\req\signTask\ActorGetUrlReq;
use FddCloud\bean\req\signTask\AddActorsReq;
use FddCloud\bean\req\signTask\AddAttachReq;
use FddCloud\bean\req\signTask\CreateSignTaskReq;
use FddCloud\bean\req\signTask\CreateWithTemplateReq;
use FddCloud\bean\req\signTask\DownloadFilesReq;
use FddCloud\bean\req\signTask\FillFieldValuesReq;
use FddCloud\bean\req\signTask\GetSignTaskEditUrlReq;
use FddCloud\bean\req\signTask\SignTaskApplyReportReq;
use FddCloud\bean\req\signTask\SignTaskBaseReq;
use FddCloud\bean\req\signTask\SignTaskCancelReq;
use FddCloud\bean\req\signTask\SignTaskDownloadReportReq;
use FddCloud\bean\req\template\docTemplate\DocTemplateDetailReq;
use FddCloud\bean\req\template\signTemplate\SignTemplateDetailReq;
use FddCloud\bean\req\template\TemplatePreviewGetUrl;
use FddCloud\bean\req\user\GetUserAuthUrlReq;
use FddCloud\bean\req\user\GetUserChangeUrlReq;
use FddCloud\bean\req\user\GetUserIdentityInfoReq;
use FddCloud\bean\req\user\GetUserReq;
use FddCloud\bean\req\user\UnbindUserReq;
use FddCloud\client\CorpClient;
use FddCloud\client\DocClient;
use FddCloud\client\OrgClient;
use FddCloud\client\SealClient;
use FddCloud\client\ServiceClient;
use FddCloud\client\SignTaskClient;
use FddCloud\client\TemplateClient;
use FddCloud\client\UserClient;
use FddCloud\constants\OpenApiUrlConstants;
use think\Controller;
use think\Db;
use FddCloud\client\Client;

class Fadada extends Controller
{

    public $service_url = 'https://uat-api.fadada.com/api/v5/';//测试地址
     public $app_id = '80001899';//测试参数
     public $app_secret = 'NYYP26BBPRTYC5TLQISV73DDONHOSTYY';//测试参数


     public $debug = false;
     public $time_out = 60;

     public $OpenCorpId = "a71d3eefdf134499ab35f02c43599dbb";//测试参数

//    public $debug = false;
//    public $time_out = 60;
//    public $service_url = 'https://api.fadada.com/api/v5/';
//    public $app_id = '00001921';//正式参数
//    public $app_secret = 'OOUS1CQ3ILHXY2BC8SECOI4KESWC9ABG';//正式参数
//    public $OpenCorpId = "f463ac1db4c847f081f6513f5f09bc31";//正式参数

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Methods:POST, GET, PUT, DELETE, OPTIONS');
        header('Access-Control-Allow-Credentials: true');
        header('Access-Control-Allow-Headers:x-requested-with,Content-Type,X-CSRF-Token,token');
        header('Access-Control-Expose-Headers: *');

        $this->client = new Client(
            $this->app_id,$this->app_secret,$this->service_url,$this->time_out,$this->debug
        );
    }
    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月12月 10:07:42
     * ps:获取对接凭证
     */
    public function gettoken(){

        $serviceClient = new ServiceClient($this->client);
        $response = $serviceClient->getAccessToken();
        $res = json_decode($response,true);
        return $res['data']['accessToken'];
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月12月 10:18:13
     * ps:个人实名认证网页版
     * url:{{URL}}/index.php/api/lovesigning/userattestationurl
     */
    public function userattestationurl($name='',$identityNo='',$phone='',$customId,$url='',$port=0){
        $getUserAuthUrlReq = new GetUserAuthUrlReq();
        $data = array();
        $data['userName'] = $name;
        $data['userIdentType'] = 'id_card';
        $data['userIdentNo'] = $identityNo;
        $data['mobile'] =$phone;
       $identMethod = ['face','mobile'];
        //$identMethod = ['face'];

        $data['identMethod'] = $identMethod;
        $getUserAuthUrlReq->setClientUserId($identityNo);
        $getUserAuthUrlReq->setAccountName($phone);
        $getUserAuthUrlReq->setUserIdentInfo($data);
        $nonEditableInfo = ['userName','userIdentType','userIdentNo','mobile'];
        $getUserAuthUrlReq->setNonEditableInfo($nonEditableInfo);

        $authScope = ["ident_info", "seal_info", "signtask_init", "signtask_info", "signtask_file","file_storage"];

        $getUserAuthUrlReq->setAuthScopes($authScope);
        if($port == 1){
            //小程序回调地址
            $getUserAuthUrlReq->setRedirectMiniAppUrl($url);
        }else{
            $getUserAuthUrlReq->setRedirectUrl($url);
        }

        $UserClient = new UserClient($this->client);
        $res = $UserClient->getUserAuthUrl($this->gettoken(),$getUserAuthUrlReq);
        $rest = json_decode($res,true);
        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['identifyUrl'] = $rest['data']['authUrl'];

        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月12月 11:23:29
     * ps:获取个人认证状态
     * $usertype:用户类型（1：企业；2：个人）
     */
    public function getuserstate($clientUserId,$usertype){
        if($usertype == 1){
            $GetCorpReq = new GetCorpReq();
            $GetCorpReq->setCorpIdentNo($clientUserId);
            $CorpClient = new CorpClient($this->client);
            $res = $CorpClient->getDetail($this->gettoken(),$GetCorpReq);
        }else{
            $GetUserReq = new GetUserReq();
            $GetUserReq->setClientUserId($clientUserId);

            $UserClient = new UserClient($this->client);
            $res = $UserClient->getDetail($this->gettoken(),$GetUserReq);
        }

        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            if($usertype == 1){
                $retu['account'] = $rest['data']['openCorpId'];

            }else{
                $retu['account'] = $rest['data']['openUserId'];

            }
            $status = 0;
            if($rest['data']['identStatus'] == 'identified'){
                $status = 1;
            }
            $retu['attestation'] = $status;//认证状态（0：未认证；1：已认证)
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月12月 11:23:29
     * ps:获取个人认证信息
     */
    public function getuser($openUserId,$type=1,$usertype){
        if($type == 3){

            $fanh = $this->getuserstate($openUserId,$usertype);
            if($fanh['code'] == 200){
                $openUserId = $fanh['account'];
            }else{
                $retu['code']=300;
                $retu['msg']='未认证,无法获取';

            }
        }

        if($usertype == 1){
            $GetCorpIdentityInfoReq = new GetCorpIdentityInfoReq();
            $GetCorpIdentityInfoReq->setOpenCorpId($openUserId);
            $CorpClient = new CorpClient($this->client);
            $res = $CorpClient->getIdentityInfo($this->gettoken(),$GetCorpIdentityInfoReq);
        }else{

            $GetUserIdentityInfoReq = new GetUserIdentityInfoReq();
            $GetUserIdentityInfoReq->setOpenUserId($openUserId);
            $UserClient = new UserClient($this->client);
            $res = $UserClient->getIdentityInfo($this->gettoken(),$GetUserIdentityInfoReq);
        }

        $rest = json_decode($res,true);
        //dump($rest);exit;
        if($rest['code'] == 100000){
            $retu['code']=200;
            if($usertype == 1){
                $retu['account'] = $rest['data']['openCorpId'];
                $status = 0;
                if($rest['data']['corpIdentStatus'] == 'identified'){
                    $status = 1;
                }
                $retu['attestation'] = $status;//认证状态（0：未认证；1：已认证)
                $retu['name'] = $rest['data']['corpIdentInfo']['legalRepName'];

                $retu['companyName'] = $rest['data']['corpIdentInfo']['corpName'];
                $retu['creditCode'] = $rest['data']['corpIdentInfo']['corpIdentNo'];
                $retu['phone'] = '';
                $retu['attestationType'] = '';

                if($rest['data']['corpIdentMethod'] == 'legal_rep'){
                    $retu['attestationType'] = '法定代表人身份认证 ';
                }else if($rest['data']['corpIdentMethod'] == 'deputy_auth'){
                    $retu['attestationType'] = '法定代表人授权认证';
                }else if($rest['data']['corpIdentMethod'] == 'payment'){
                    $retu['attestationType'] = '企业对公账户认证';
                }else if($rest['data']['corpIdentMethod'] == 'offline'){
                    $retu['attestationType'] = '纸质材料审核认证';
                }
                $retu['finishedTime'] =$rest['data']['identSuccessTime'];
                $retu['serialNo'] = $rest['data']['fddId'];//法大大号
            }else{
                $retu['account'] = $rest['data']['openUserId'];
                $status = 0;
                if($rest['data']['identStatus'] == 'identified'){
                    $status = 1;
                }
                $retu['attestation'] = $status;//认证状态（0：未认证；1：已认证)

                $retu['name'] = $rest['data']['userIdentInfo']['userName'];
                $retu['identityNo'] = $rest['data']['userIdentInfo']['identNo'];
                $retu['phone'] = $rest['data']['userIdentInfoExtend']['mobile'];
                if($rest['data']['identMethod'] == 'mobile'){
                    $retu['attestationType'] = '实名认证手机号认证 ';
                }else if($rest['data']['identMethod'] == 'face'){
                    $retu['attestationType'] = '人脸识别认证';
                }else if($rest['data']['identMethod'] == 'bank'){
                    $retu['attestationType'] = '个人银行卡认证';
                }else if($rest['data']['identMethod'] == 'offline'){
                    $retu['attestationType'] = '人工审核认证';
                }
//                $retu['attestationType'] = $rest['data']['facePicture'];
                $retu['finishedTime'] =$rest['data']['identSuccessTime'];
                $retu['serialNo'] = $rest['data']['fddId'];//法大大号
            }
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月12月 11:45:14
     * ps:企业认证网页版
     */
    public function enterattestationurl($entername='',$enterCode='',$legalRepName,$userdata,$ClientUserId,$url='',$license = '',$port=0){
        $data = array();
        $data['corpName'] = $entername;
        $data['corpIdentType'] = 'corp';
        $data['corpIdentNo'] =$enterCode;
        $data['legalRepName'] =$legalRepName;
        if($license){
            $data['license'] =$this->base64($license);
        }
        $CorpClient = new CorpClient($this->client);
        $GetCorpAuthUrlReq = new GetCorpAuthUrlReq();
        $GetCorpAuthUrlReq->setClientCorpId($enterCode);
        $GetCorpAuthUrlReq->setClientUserId($ClientUserId);
        $GetCorpAuthUrlReq->setAccountName($userdata['mobile']);
        $GetCorpAuthUrlReq->setCorpIdentInfo($data);
        $GetCorpAuthUrlReq->setOprIdentInfo($userdata);
        $AuthScopes = ['ident_info','seal_info','organization','template','signtask_init','signtask_info','signtask_file','file_storage','contract_info','billaccount_info','smartform'];
        $GetCorpAuthUrlReq->setAuthScopes($AuthScopes);
        if($port == 1){
            //小程序授权回调地址
            $GetCorpAuthUrlReq->setRedirectMiniAppUrl($url);
        }else{
            $GetCorpAuthUrlReq->setRedirectUrl($url);

        }
        $CorpNonEditableInfo = ['corpName','corpIdentType','corpIdentNo'];
        $GetCorpAuthUrlReq->setCorpNonEditableInfo($CorpNonEditableInfo);
        $OprNonEditableInfo = ['accountName','userName','userIdentType','userIdentNo','mobile'];
        $GetCorpAuthUrlReq->setOprNonEditableInfo($OprNonEditableInfo);
        //企业营业执照

        $res = $CorpClient->getCorpAuthUrl($this->gettoken(),$GetCorpAuthUrlReq);
        $rest = json_decode($res,true);
        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['identifyUrl'] = $rest['data']['authUrl'];

        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }
    //把图片地址改为base64格式
    function base64($file){

        $a = explode(".com/",$file);

        $file = ROOT_PATH . 'public' . DS  .$a[1];

        if($fp = fopen($file,"rb", 0))
        {
            $gambar = fread($fp,filesize($file));
            fclose($fp);
            $base64 = base64_encode($gambar);

            return $base64;
        }
    }
    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月12月 14:01:55
     * ps:添加签章
     * $openUserId:用户唯一标识
     * $type:类型（custom：个人，enterprise：企业)
     * $userId：企业添加时间的个人用户标识
     * 不传前台回调地址，操作完就停住
     */
    public function addseals($ClientUserId,$type,$userId,$url=''){
        $SealClient = new SealClient($this->client);

        if($type == 'custom'){

            $GetPersonalSealCreateUrlReq = new GetPersonalSealCreateUrlReq();
            $GetPersonalSealCreateUrlReq->setClientUserId($ClientUserId);

            $GetPersonalSealCreateUrlReq->setRedirectUrl($url);

            $res = $SealClient->getPersonalSealCreateUrl($this->gettoken(),$GetPersonalSealCreateUrlReq);
        }else{
            $GetSealCreateUrlReq = new GetSealCreateUrlReq();
            $GetSealCreateUrlReq->setOpenCorpId($ClientUserId);
            $GetSealCreateUrlReq->setClientUserId($userId);

            $GetSealCreateUrlReq->setRedirectUrl($url);

            $res = $SealClient->getSealCreateUrl($this->gettoken(),$GetSealCreateUrlReq);
        }

        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['hwBoardUrl'] = $rest['data']['sealCreateUrl'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月12月 14:30:40
     * ps:查询印章
     * url:{{URL}}/index.php/api/lovesigning/getseals
     * $account:用户唯一标识
     * $sealNo:印章编号
     */
    public function getseals($account,$sealNo='',$usertype){
        $SealClient = new SealClient($this->client);

        if($usertype == 1){
            //企业
            $GetSealListReq = new GetSealListReq();
            $GetSealListReq->setOpenCorpId($account);
            $res = $SealClient->getSealList($this->gettoken(),$GetSealListReq);
            $rest = json_decode($res,true);

            if($rest['code'] == 100000) {
                $data['code'] = 200;
                foreach($rest['data']['sealInfos'] as $k=>$v){
                    if($sealNo){

                        if($v['sealId'] == $sealNo){
                            $data['sealName'] = $v['sealName'];//印章名称

                            $data['sealNo'] = $v['sealId'];//印章编号
                            $data['sealUrl'] = $v['picFileUrl'];//印章图片地址
//                            if($v['defaultSeal'] == true){
//                                $isDefault = 1;
//                            }else{
//                                $isDefault = 0;
//                            }
                            $data['isDefault'] = 0;//是否默认
                            $data[$k]['certCAOrg'] = $v['certCAOrg'];//证书颁发机构
                            $data['certCANo'] = $v['certCANo'];//CA证书序列号
                            $data['certEncryptType'] = $v['certEncryptType'];//证书加密算法类型
                        }
                    }else{
                        $data['list'][$k]['sealName']= $v['sealName'];//印章名称

                        $data['list'][$k]['sealNo'] = $v['sealId'];//印章编号
                        $data['list'][$k]['sealUrl'] = $v['picFileUrl'];//印章图片地址
//                        if($v['defaultSeal'] == true){
//                            $isDefault = 1;
//                        }else{
//                            $isDefault = 0;
//                        }
                        $data['list'][$k]['isDefault'] =0;//是否默认
                        $data['list'][$k]['certCAOrg'] = $v['certCAOrg'];//证书颁发机构
                        $data['list'][$k]['certCANo'] = $v['certCANo'];//CA证书序列号
                        $data['list'][$k]['certEncryptType'] = $v['certEncryptType'];//证书加密算法类型
                    }
                }

            }else{
                $data['code'] = 300;
                $data['msg']= $rest['msg'];
            }
            return $data;
        }else{
            //个人
            $GetPersonalSealListReq = new GetPersonalSealListReq();
            $GetPersonalSealListReq->setOpenUserId($account);
            $res = $SealClient->getPersonalSealList($this->gettoken(),$GetPersonalSealListReq);
            $rest = json_decode($res,true);
            if($rest['code'] == 100000){
                $data['code'] = 200;
                foreach($rest['data']['sealInfos'] as $k=>$v){
                    if($sealNo){
                        if($v['sealId'] == $sealNo){
                            $data['sealName']= $v['sealName'];//印章名称

                            $data['sealNo'] = $v['sealId'];//印章编号
                            $data['sealUrl'] = $v['picFileUrl'];//印章图片地址
                            if($v['defaultSeal'] == true){
                                $isDefault = 1;
                            }else{
                                $isDefault = 0;
                            }
                            $data['isDefault'] = $isDefault;//是否默认
                            $data[$k]['certCAOrg'] = $v['certCAOrg'];//证书颁发机构
                            $data['certCANo'] = $v['certCANo'];//CA证书序列号
                            $data['certEncryptType'] = $v['certEncryptType'];//证书加密算法类型
                        }
                    }else{
                        $data['list'][$k]['sealName']= $v['sealName'];//印章名称

                        $data['list'][$k]['sealNo'] = $v['sealId'];//印章编号
                        $data['list'][$k]['sealUrl'] = $v['picFileUrl'];//印章图片地址
                        if($v['defaultSeal'] == true){
                            $isDefault = 1;
                        }else{
                            $isDefault = 0;
                        }
                        $data['list'][$k]['isDefault'] = $isDefault;//是否默认
                        $data['list'][$k]['certCAOrg'] = $v['certCAOrg'];//证书颁发机构
                        $data['list'][$k]['certCANo'] = $v['certCANo'];//CA证书序列号
                        $data['list'][$k]['certEncryptType'] = $v['certEncryptType'];//证书加密算法类型
                    }
                }
            }else{
                $data['code'] = 300;
                $data['msg']= $rest['msg'];
            }
            return $data;
        }

    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月12月 15:11:10
     * ps:设置印章状态（停用、启用)
     */
    public function setSeal($openCorpId,$sealId,$sealStatus){
        $SealClient = new SealClient($this->client);
        $SealSetStatusReq = new SealSetStatusReq();
        $SealSetStatusReq->setSealId($sealId);
        $SealSetStatusReq->setOpenCorpId($openCorpId);
        $SealSetStatusReq->setSealStatus($sealStatus);

        $res = $SealClient->sealSetStatus($this->gettoken(),$SealSetStatusReq);

        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月12月 15:06:02
     * ps:删除印章
     */
    public function removeSeal($account,$sealNo,$usertype){
        $SealClient = new SealClient($this->client);

        if($usertype == 1){
            //企业
            $this->setSeal($account,$sealNo,'disable');
            $SealDeleteReq = new SealDeleteReq();
            $SealDeleteReq->setSealId($sealNo);
            $SealDeleteReq->setOpenCorpId($account);
            $res = $SealClient->sealDelete($this->gettoken(),$SealDeleteReq);
        }else{
            //个人
            $PersonalSealDeleteReq = new PersonalSealDeleteReq();
            $PersonalSealDeleteReq->setOpenUserId($account);
            $PersonalSealDeleteReq->setSealId($sealNo);

            $res = $SealClient->deletePersonalSeal($this->gettoken(),$PersonalSealDeleteReq);
        }

        $rest = json_decode($res,true);
        if($rest['code'] == 100000){
            $retu['code']=200;
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月12月 17:08:52
     * ps:获取用户数字证书
     * url:{{URL}}/index.php/api/fadada/getcertinfo
     */
    public function getcertinfo($openCorpId,$usertype){

        $SealClient = new SealClient($this->client);
        $GetCertInfoReq = new GetCertInfoReq();
        if($usertype == 1){
            $data['idType'] = 'corp';
        }else{
            $data['idType'] = 'person';
        }
        $data['openId'] = $openCorpId;
        $GetCertInfoReq->setOwnerId($data);
        $res = $SealClient->getCertInfo($this->gettoken(),$GetCertInfoReq);
        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            foreach($rest['data'] as $k=>$v){
                $retu['list'][$k]['certNo'] = $v['certNo'];
                $retu['list'][$k]['ownerName'] = $v['ownerName'];
                $retu['list'][$k]['certCA'] = $v['certCA'];
                $retu['list'][$k]['encryptionType'] = $v['encryptionType'];
                $retu['list'][$k]['validPeriod'] = $v['validPeriod'];
                $retu['list'][$k]['status'] = $v['status'];
                $retu['list'][$k]['certImg'] =$v['certImg'];
            }
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;

    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月14月 14:24:13
     * ps:创建签署任务（基于模版）
     */
    public function createContract($contractNo='HT202409143929834',$contractName='测试合同1',$validityDate='',$templateNo='1726293048610124556',$openId='',$idType='',$signingTime,$actors){
        $SignTaskClient = new SignTaskClient($this->client);
        $CreateWithTemplateReq = new CreateWithTemplateReq();
        $CreateWithTemplateReq->setSignTemplateId($templateNo);
        $data = array();
        if(!$openId){
            $data['openId'] = '67da3a75ae474e2a9d11f182354eeb55';
        }else{
            $data['openId'] = $openId;
        }
        if(!$idType){
            $data['idType'] = 'corp';
        }else{
            $data['idType'] = $idType;
        }
        $CreateWithTemplateReq->setinitiator($data);
        $CreateWithTemplateReq->setsignTaskSubject($contractName);
       // $CreateWithTemplateReq->setbusinessCode($contractNo);
        if($signingTime){
            $CreateWithTemplateReq->setExpiresTime($signingTime*1000);
        }
//        if($signingTime){
//            $CreateWithTemplateReq->setDueDate($validityDate*1000);
//        }

        $CreateWithTemplateReq->setActors($actors);

        $res = $SignTaskClient->createWithTemplate($this->gettoken(),$CreateWithTemplateReq);

        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            //1726298999785147249
            $retu['signTaskId']=$rest['data']['signTaskId'];

        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月14月 16:16:00
     * ps:查询模版详情（未调通）
     */
    public function gettemplatedetail($templateNo='1726293048610124556'){
        $TemplateClient = new TemplateClient($this->client);
        $SignTemplateDetailReq = new SignTemplateDetailReq();

        $SignTemplateDetailReq->setSignTemplateId($templateNo);
        $res = $TemplateClient->getSignTemplateDetail($this->gettoken(),$SignTemplateDetailReq);
        dump($res);exit;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月24月 9:13:32
     * ps:合同模版预览链接
     */
    public function gettemplateurl($TemplateId='1729662177910196125'){
        $TemplateClient = new TemplateClient($this->client);
        $TemplatePreviewGetUrl = new TemplatePreviewGetUrl();
        $TemplatePreviewGetUrl->setOpenCorpId($this->OpenCorpId);

        $TemplatePreviewGetUrl->setTemplateId($TemplateId);
        $res = $TemplateClient->templatePreviewGetUrl($this->gettoken(),$TemplatePreviewGetUrl);
        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['url']=$rest['data']['templatePreviewUrl'];

        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月14月 16:33:22
     * ps:查询签署任务详情
     */
    public function getcontenttaskdetail($signTaskId='1726298999785147249'){
        $SignTaskClient = new SignTaskClient($this->client);
        $SignTaskBaseReq = new SignTaskBaseReq();
        $SignTaskBaseReq->setSignTaskId($signTaskId);
        $res = $SignTaskClient->getAppDetail($this->gettoken(),$SignTaskBaseReq);
        $rest = json_decode($res,true);
        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['docId']=$rest['data']['docs'][0]['docId'];
            $retu['docName']=$rest['data']['docs'][0]['docName'];

        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }

        return $retu;
    }
    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月14月 14:24:13
     * ps:填写签署任务控件内容
     */
    public function fillvalues($signTaskId='1726726439909115389',$fillData=''){
        $SignTaskClient = new SignTaskClient($this->client);
        $FillFieldValuesReq = new FillFieldValuesReq();
        $FillFieldValuesReq->setsignTaskId($signTaskId);

        $FillFieldValuesReq->setDocFieldValues($fillData);
        $res = $SignTaskClient->fillFieldsValue($this->gettoken(),$FillFieldValuesReq);

        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            //1726298999785147249
            $retu['signTaskId']=$rest['data']['signTaskId'];

        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月18月 13:05:07
     * ps:获取签署任务预览链接
     * url:{{URL}}/index.php/api/fadada/getpreviewurl
     */
    public function getpreviewurl($signTaskId='1726726439909115389'){
        $SignTaskClient = new SignTaskClient($this->client);
        $SignTaskBaseReq = new SignTaskBaseReq();
        $SignTaskBaseReq->setsignTaskId($signTaskId);
        $res = $SignTaskClient->getPreviewUrl($this->gettoken(),$SignTaskBaseReq);

        $rest = json_decode($res,true);
        $retu['msg'] = '';

        if($rest['code'] == 100000){
            $retu['code']=200;
            //1726298999785147249
            $retu['url'] = $rest['data']['signTaskPreviewUrl'];


        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月18月 13:43:50
     * ps:获取签署任务预填写连接
     */
    public function getprefillurl(){
        $signTaskId = "1726723756588183246";
        $SignTaskClient = new SignTaskClient($this->client);
        $SignTaskBaseReq = new SignTaskBaseReq();
        $SignTaskBaseReq->setsignTaskId($signTaskId);



        $res = $SignTaskClient->getPrefillUrl($this->gettoken(),$SignTaskBaseReq);

        $rest = json_decode($res,true);
        dump($rest);exit;
        //?signTaskId=1726723756588183246
        if($rest['code'] == 100000){
            $retu['code']=200;
            //1726298999785147249
            $retu['url'] = $rest['data']['signTaskEditUrl'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }
    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月18月 13:43:50
     * ps:获取签署任务编辑连接
     */
    public function getediturl($signTaskId='1726723756588183246'){
        $signTaskId = "1726640424047178027";
        $SignTaskClient = new SignTaskClient($this->client);
        $GetSignTaskEditUrlReq = new GetSignTaskEditUrlReq();
        $GetSignTaskEditUrlReq->setsignTaskId($signTaskId);
        $GetSignTaskEditUrlReq->setEditAfterStart(true);



        $res = $SignTaskClient->getEditUrl($this->gettoken(),$GetSignTaskEditUrlReq);

        $rest = json_decode($res,true);
        dump($rest);exit;
        //?signTaskId=1726723756588183246
        if($rest['code'] == 100000){
            $retu['code']=200;
            //1726298999785147249
            $retu['url'] = $rest['data']['signTaskEditUrl'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }
    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月18月 13:32:17
     * ps:提交签署任务
     */
    public function startfill($signTaskId='1726726439909115389'){
        $SignTaskClient = new SignTaskClient($this->client);
        $SignTaskBaseReq = new SignTaskBaseReq();
        $SignTaskBaseReq->setsignTaskId($signTaskId);

        $res = $SignTaskClient->start($this->gettoken(),$SignTaskBaseReq);

        $rest = json_decode($res,true);
        if($rest['code'] == 100000){
            $retu['code']=200;
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }

        return $retu;
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月19月 14:09:34
     * ps:定稿签署任务
     * url:{{URL}}/index.php/api/fadada/docfinalize
     */
    public function docfinalize($signTaskId='1726725942553139806'){
        $SignTaskClient = new SignTaskClient($this->client);
        $SignTaskBaseReq = new SignTaskBaseReq();
        $SignTaskBaseReq->setsignTaskId($signTaskId);

        $res = $SignTaskClient->finalizeDoc($this->gettoken(),$SignTaskBaseReq);

        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }

        return $retu;
    }

//    /**
//     * Created by PhpStorm.
//     * User:lang
//     * time:2024年9月18月 13:45:32
//     * ps:添加任务签署方
//     */
//    public function addactor($signTaskId,$data){
//        $SignTaskClient = new SignTaskClient($this->client);
//        $AddActorsReq = new AddActorsReq();
//        $AddActorsReq->setsignTaskId($signTaskId);
//
//        $AddActorsReq->setActors($data);
//       //dump($AddActorsReq);exit;
//        $res = $SignTaskClient->addActors($this->gettoken(),$AddActorsReq);
//        $rest = json_decode($res,true);
//        dump($rest);exit;
//        if($rest['code'] == 100000){
//            $retu['code']=200;
//        }else{
//            $retu['code'] = 300;
//            $retu['msg'] = $rest['msg'];
//        }
//        return $retu;
//    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月18月 14:54:36
     * ps:获取签署方链接
     */
    public function getactorurl($signTaskId,$ActorId,$ClientUserId,$redirectUrl='',$port=0){
        $SignTaskClient = new SignTaskClient($this->client);
        $ActorGetUrlReq = new ActorGetUrlReq();
        $ActorGetUrlReq->setsignTaskId($signTaskId);
        $ActorGetUrlReq->setActorId($ActorId);
        $ActorGetUrlReq->setClientUserId($ClientUserId);
        if($port == 1){
            //小程序
            $ActorGetUrlReq->setRedirectMiniAppUrl($redirectUrl);
        }else{
            $ActorGetUrlReq->setRedirectUrl($redirectUrl);

        }

        $res = $SignTaskClient->actorGetUrl($this->gettoken(),$ActorGetUrlReq);
        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['url'] = $rest['data']['actorSignTaskEmbedUrl'];//actorSignTaskUrl
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月18月 15:46:53
     * ps:获取签署任务详情
     */
    public function getcontract($signTaskId){
        $SignTaskClient = new SignTaskClient($this->client);
        $SignTaskBaseReq = new SignTaskBaseReq();
        $SignTaskBaseReq->setsignTaskId($signTaskId);

        $res = $SignTaskClient->getAppDetail($this->gettoken(),$SignTaskBaseReq);
        $rest = json_decode($res,true);
//        dump($rest);exit;
        if($rest['code'] == 100000){
            $retu['code'] = 200;
            $retu['status'] = $rest['data']['signTaskStatus'];
            $retu['contractName'] = $rest['data']['signTaskSubject'];
//            $rest['expireTime'] = strtotime($res['data']['validityTime']);
            foreach($rest['data']['actors'] as $k=>$v){
                $retu['signing'][$k]['account'] = $v['actorInfo']['actorOpenId'];
                $retu['signing'][$k]['TCN'] = $v['actorInfo']['actorId'];
                $retu['signing'][$k]['state'] = $v['signStatus'];
                $retu['signing'][$k]['actorNote'] = $v['actorNote'];
                $retu['signing'][$k]['signTime'] = $v['signTime'];
                $retu['signing'][$k]['url'] = $v['actorSignTaskEmbedUrl'];
                if($v['actorInfo']['actorType'] == 'corp'){
                    $retu['signing'][$k]['userType'] = 1;
                }else{
                    $retu['signing'][$k]['userType'] =2;

                }
            }

        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月18月 16:41:45
     * ps:下载合同
     */
    public function downloadContract($SignTaskId,$customName,$openId,$idType){
        $SignTaskClient = new SignTaskClient($this->client);
        $DownloadFilesReq = new DownloadFilesReq();
        if(!$idType){
            $data['idType'] = 'corp';
        }else{
            $data['idType'] = $idType;
        }
        if(!$openId){
            $data['openId'] = $this->OpenCorpId;
        }else{
            $data['openId'] = $openId;
        }
        $DownloadFilesReq->setOwnerId($data);
        $DownloadFilesReq->setSignTaskId($SignTaskId);
        $DownloadFilesReq->setCompression('true');
        $DownloadFilesReq->setCustomName($customName);
        $DownloadFilesReq->setFolderBySigntask('false');

        $res = $SignTaskClient->getOwnerDownloadUrl($this->gettoken(),$DownloadFilesReq);
        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['url'] = $rest['data']['downloadUrl'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月19月 10:23:01
     * ps:通过网络地址上传合同文件
     * url:{{URL}}/index.php/api/fadada/uploadbyurl
     */
    public function uploadbyurl($FileType='doc',$FileUrl='http://sign.xtwlhy.com/upload/image/20240919/3eb120e4cfb111ada55ff9ddf98bdf16.pdf'){

        $DocClient = new DocClient($this->client);

        $FileUploadByUrlReq = new FileUploadByUrlReq();
        $FileUploadByUrlReq->setFileType($FileType);
        $FileUploadByUrlReq->setFileUrl($FileUrl);

        $res = $DocClient->fileUploadByUrl($this->gettoken(),$FileUploadByUrlReq);
        $rest = json_decode($res,true);
        //https://doc-test-os1.fadada.com/7eb41ca66d5a488f8cb797a2fc8d5061

        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['url'] = $rest['data']['fddFileUrl'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月19月 10:34:13
     * ps:文件处理
     */
    public function process($fileType='doc',$url='https://doc-test-os1.fadada.com/7eb41ca66d5a488f8cb797a2fc8d5061',$name='授权协议.pdf'){
        $DocClient = new DocClient($this->client);

        $FileProcessReq = new FileProcessReq();
        $list['fileType'] = $fileType;
        $list['fddFileUrl'] =$url;
        $list['fileName'] =$name;

        $FileProcessReq->setFddFileUrlList($list);
        $res = $DocClient->fileProcess($this->gettoken(),$FileProcessReq);
        $rest = json_decode($res,true);
//        ["fileId"] => string(19) "1726713134288113759"
//        ["fileType"] => string(3) "doc"
//        ["fddFileUrl"] => string(64) "https://doc-test-os1.fadada.com/7eb41ca66d5a488f8cb797a2fc8d5061"
//        ["fileName"] => string(16) "授权协议.pdf"
//        ["fileTotalPages"] => int(1)
        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['fileId'] = $rest['data']['fileIdList'][0]['fileId'];
            $retu['fileType'] = $rest['data']['fileIdList'][0]['fileType'];
            $retu['fddFileUrl'] = $rest['data']['fileIdList'][0]['fddFileUrl'];
            $retu['fileName'] = $rest['data']['fileIdList'][0]['fileName'];
            $retu['fileTotalPages'] = $rest['data']['fileIdList'][0]['fileTotalPages'];

        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月19月 10:42:51
     * ps:创建签署任务（基于文档）
     */
    public function createContractfile($contractNo='HT202409143929834',$contractName='测试合同1',$validityDate='',$docs='',$actires,$annexdata='',$openId='',$idType='',$signingTime){
        $SignTaskClient = new SignTaskClient($this->client);
        $CreateSignTaskReq = new CreateSignTaskReq();
        $data = array();
        if(!$openId){
            $data['openId'] = '67da3a75ae474e2a9d11f182354eeb55';
        }else{
            $data['openId'] = $openId;

        }
        if(!$idType){
            $data['idType'] = 'corp';
        }else{
            $data['idType'] = $idType;

        }


        $CreateSignTaskReq->setinitiator($data);
        $CreateSignTaskReq->setsignTaskSubject($contractName);
        $CreateSignTaskReq->setbusinessCode($contractNo);
        $CreateSignTaskReq->setDocs($docs);
//        if($validityDate){
//            $CreateSignTaskReq->setDueDate($validityDate*1000);
//        }
        if($signingTime){
            $CreateSignTaskReq->setExpiresTime($signingTime*1000);
        }
        $CreateSignTaskReq->setActors($actires);
        $CreateSignTaskReq->setAttachs($annexdata);

        $res = $SignTaskClient->create($this->gettoken(),$CreateSignTaskReq);

        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['signTaskId'] = $rest['data']['signTaskId'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年10月18月 15:31:27
     * ps:未开始前添加附件
     */
    public function addattach($SignTaskId,$Attachs){
        $SignTaskClient = new SignTaskClient($this->client);
        $AddAttachReq = new AddAttachReq();
        $AddAttachReq->setSignTaskId($SignTaskId);
        $AddAttachReq->setAttachs($Attachs);
        $res = $SignTaskClient->addAttachs($this->gettoken(),$AddAttachReq);
        $rest = json_decode($res,true);
        if($rest['code'] == 100000){
            $retu['code']=200;
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月19月 15:33:39
     * ps:解除授权
     */
    public function unbind(){
        $UserClient = new UserClient($this->client);
        $UnbindUserReq = new UnbindUserReq();
        $UnbindUserReq->setOpenUserId('7bf397b0f89a41228eb2edc7fce3d82f');

        $res = $UserClient->unbind($this->gettoken(),$UnbindUserReq);

        $rest = json_decode($res,true);
        dump($rest);exit;
        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['signTaskId'] = $rest['data']['signTaskId'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }
    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月27月 10:26:27
     * ps:撤销签署任务
     */
    public function cancel($signTaskId,$msg){
        $SignTaskClient = new SignTaskClient($this->client);
        $SignTaskCancelReq = new SignTaskCancelReq();
        $SignTaskCancelReq->setSignTaskId($signTaskId);
        $SignTaskCancelReq->setTerminationNote($msg);

        $res = $SignTaskClient->cancel($this->gettoken(),$SignTaskCancelReq);

        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }
    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月27月 10:26:27
     * ps:作废签署任务
     */
    public function abolish($signTaskId,$reason,$abolishedInitiator){
        $SignTaskClient = new SignTaskClient($this->client);
        $AbolishSignTaskReq = new AbolishSignTaskReq();
        $AbolishSignTaskReq->setSignTaskId($signTaskId);
        $AbolishSignTaskReq->setAbolishedInitiator($abolishedInitiator);
        $AbolishSignTaskReq->setReason($reason);
        $AbolishSignTaskReq->setAutoStart('true');
        $res = $SignTaskClient->abolishSignTask($this->gettoken(),$AbolishSignTaskReq);

        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['cancelId'] = $rest['data']['abolishedSignTaskId'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月27月 16:53:08
     * ps:申请出证
     */
    public function signtaskapplyreport($SignTaskId,$owner,$reportType){
        $SignTaskClient = new SignTaskClient($this->client);
        $SignTaskApplyReportReq = new SignTaskApplyReportReq();
        $SignTaskApplyReportReq->setSignTaskId($SignTaskId);
        $SignTaskApplyReportReq->setOwnerId($owner);
        $SignTaskApplyReportReq->setReportType($reportType);
        $res = $SignTaskClient->applyReport($this->gettoken(),$SignTaskApplyReportReq);
        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['reportDownLoadId'] = $rest['data']['reportDownLoadId'];
            if($rest['data']['reportStatus'] == 'success'){
                $reportrest=$this->downloadreport($rest['data']['reportDownLoadId']);
                if($reportrest['code'] == 200){
                    $retu['url'] = $reportrest['url'];
                }
            }
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月27月 16:53:08
     * ps:申请出证地址
     */
    public function downloadreport($setReportDownloadId='C241120102128e0a26'){
        $SignTaskClient = new SignTaskClient($this->client);
        $SignTaskDownloadReportReq = new SignTaskDownloadReportReq();
        $SignTaskDownloadReportReq->setReportDownloadId($setReportDownloadId);
        $res = $SignTaskClient->downloadReport($this->gettoken(),$SignTaskDownloadReportReq);
        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['url'] = $rest['data']['reportDownloadUrl'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }

        return $retu;
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年10月21月 10:37:57
     * ps:添加企业成员
     */
    public function createmember($openCorpId,$employeeInfos){
        $OrgClient = new OrgClient($this->client);
        $MemberCreateReq = new MemberCreateReq();
        $MemberCreateReq->setOpenCorpId($openCorpId);
        $MemberCreateReq->setEmployeeInfos($employeeInfos);
        $res = $OrgClient->memberCreate($this->gettoken(),$MemberCreateReq);
        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['memberId']=$rest['data'][0]['memberId'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年10月21月 10:37:57
     * ps:删除企业成员
     */
    public function deletemember($openCorpId,$MemberIds){
        $OrgClient = new OrgClient($this->client);
        $MemberDeleteReq = new MemberDeleteReq();
        $MemberDeleteReq->setOpenCorpId($openCorpId);
        $MemberDeleteReq->setMemberIds($MemberIds);

        $res = $OrgClient->memberDelete($this->gettoken(),$MemberDeleteReq);
        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年10月21月 10:37:57
     * ps:删除企业成员
     */
//    public function getmember($openCorpId,$MemberIds){
//        $OrgClient = new OrgClient($this->client);
//        $MemberGetDetailReq = new MemberGetDetailReq();
//        $MemberGetDetailReq->setOpenCorpId($openCorpId);
//        $MemberGetDetailReq->set($MemberIds);
//        $res = $OrgClient->memberGetDetail($this->gettoken(),$MemberGetDetailReq);
//        $rest = json_decode($res,true);
//        if($rest['code'] == 100000){
//            $retu['code']=200;
//        }else{
//            $retu['code'] = 300;
//            $retu['msg'] = $rest['msg'];
//        }
//        return $retu;
//    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年10月24月 16:50:53
     * ps:删除合同
     */
    public function delcontract($SignTaskId){
        $SignTaskClient = new SignTaskClient($this->client);
        $SignTaskBaseReq = new SignTaskBaseReq();
        $SignTaskBaseReq->setSignTaskId($SignTaskId);
        $res = $SignTaskClient->delete($this->gettoken(),$SignTaskBaseReq);
        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年10月31月 15:23:43
     * ps:获取签署任务详细内容
     */
    public function gettaskdetaill($SignTaskId='1727084379661194826'){
        $SignTaskClient = new SignTaskClient($this->client);
        $SignTaskBaseReq = new SignTaskBaseReq();
        $SignTaskBaseReq->setSignTaskId($SignTaskId);
        $res = $SignTaskClient->getAppDetail($this->gettoken(),$SignTaskBaseReq);
        $rest = json_decode($res,true);
        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['data'] = $rest['data'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年11月12月 9:28:00
     * ps:获取更换手机号链接
     */
    public function getchangeurl($url=''){
        $UserClient = new UserClient($this->client);
        $GetUserChangeUrlReq = new GetUserChangeUrlReq();
        $GetUserChangeUrlReq->getChangeType();
        if($url){
            $GetUserChangeUrlReq->getRedirectUrl($url);
        }
        $res = $UserClient->getAccountChangeUrl($this->gettoken(),$GetUserChangeUrlReq);
        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['url'] = $rest['data']['accountNameChangeUrl'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年11月12月 10:05:55
     * ps:获取印章授权给成员链接
     */
    public function grantgeturl($openCorpId,$sealId,$memberInfo,$clientUserId,$url=''){
        $SealClient = new SealClient($this->client);
        $GetSealGrantUrlReq = new GetSealGrantUrlReq();
        $GetSealGrantUrlReq->setOpenCorpId($openCorpId);
        $GetSealGrantUrlReq->setSealId($sealId);
       $GetSealGrantUrlReq->setMemberInfo($memberInfo);
        $GetSealGrantUrlReq->setClientUserId($clientUserId);
        if($url){
            $GetSealGrantUrlReq->setRedirectUrl($url);
        }
        //dump($GetSealGrantUrlReq);exit;
        $res = $SealClient->getSealGrantUrl($this->gettoken(),$GetSealGrantUrlReq);
        $rest = json_decode($res,true);

        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['url'] = $rest['data']['sealGrantUrl'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;

    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年11月14月 13:43:21
     * ps:查询成员被授权印章列表
     */
    public function getsealauthorize($OpenCorpId,$MemberId){
        $SealClient = new SealClient($this->client);
        $GetAppointedUserSealListReq = new GetAppointedUserSealListReq();
        $GetAppointedUserSealListReq->setOpenCorpId($OpenCorpId);
        $GetAppointedUserSealListReq->setMemberId($MemberId);
        $res = $SealClient->getAppointedUserSealList($this->gettoken(),$GetAppointedUserSealListReq);
        $rest = json_decode($res,true);
        //dump($rest);exit;
        if($rest['code'] == 100000){
            $retu['code']=200;
            $retu['data'] = $rest['data'];
        }else{
            $retu['code'] = 300;
            $retu['msg'] = $rest['msg'];
        }
        return $retu;
    }
}