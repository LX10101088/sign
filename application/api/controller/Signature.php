<?php

namespace app\api\controller;


use app\common\controller\Commonsignature;
use think\Controller;
use think\Db;

class Signature extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        header('Access-Control-Allow-Origin:*');
        header('Access-Control-Allow-Methods:POST, GET, PUT, DELETE, OPTIONS');
        header('Access-Control-Allow-Credentials: true');
        header('Access-Control-Allow-Headers:*');
        header('Access-Control-Expose-Headers: *');
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月10月 15:18:52
     * ps:获取印章列表
     * url:{{URL}}/index.php/api/signature/getsignaturelist
     */
    public function getsignaturelist(){
        $type = input('param.type');
        $typeId = input('param.typeId');
        if(!$type){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        if(!$typeId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $signature = Db::name('signature')
            ->where('type','=',$type)
            ->where('type_id','=',$typeId)
            ->where('deletetime','=',0)
            ->order('default desc,id desc')
            ->select();
        $data = array();
        foreach($signature as $k=>$v){
            $data[$k]['signatureId'] = $v['id'];
            $data[$k]['sealNo'] = $v['sealNo'];
            $data[$k]['img'] = $v['img'];
            $data[$k]['name'] = $v['name'];
            $data[$k]['state'] = $v['state'];
            switch($v['state']){
                case 0:
                    $data[$k]['stateName'] = '制作中';
                    break;
                case 1:
                    $data[$k]['stateName'] = '启用';
                    break;
                case 2:
                    $data[$k]['stateName'] = '停用';
                    break;
                case 3:
                    $data[$k]['stateName'] = '作废';
                    break;
            }
            $data[$k]['default'] = $v['default'];
        }
        ajaxReturn(['code'=>200,'msg'=>'获取成功','data'=>$data]);
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月10月 15:29:33
     * ps:获取印章详情
     * url:{{URL}}/index.php/api/signature/getsinature
     */
    public function getsinature(){
        $signatureId = input('param.signatureId');
        if(!$signatureId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $signature = Db::name('signature')
            ->where('id','=',$signatureId)
            ->find();
        $data = array();
        $data['signatureId'] = $signature['id'];
        $data['sealNo'] = $signature['sealNo'];
        $data['img'] = $signature['img'];
        $data['name'] = $signature['name'];
        $data['state'] = $signature['state'];
        switch($signature['state']){
            case 0:
                $data['stateName'] = '制作中';
                break;
            case 1:
                $data['stateName'] = '启用';
                break;
            case 2:
                $data['stateName'] = '停用';
                break;
            case 3:
                $data['stateName'] = '作废';
                break;
        }
        $data['default'] = $signature['default'];
        $data['createtime'] = date('Y-m-d H:i:s',$signature['createtime']);

        ajaxReturn(['code'=>200,'msg'=>'获取成功','data'=>$data]);
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月10月 15:31:46
     * ps:添加印章
     * url:{{URL}}/index.php/api/signature/addsignature
     */
    public function addsignature(){
        $type = input('param.type');
        $typeId = input('param.typeId');
        $url = input('param.url');

        if(!$type){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        if(!$typeId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $commonsignature = new Commonsignature();
        $res = $commonsignature->addplatformsignature($typeId,$type,$url);
        if($res['code'] == 200){
            ajaxReturn(['code'=>200,'msg'=>'获取成功','url'=>$res['hwBoardUrl']]);
        }else{
            ajaxReturn(['code'=>303,'msg'=>$res['msg'],'url'=>'']);
        }
    }


    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月10月 15:35:20
     * ps:设置默认签章
     * url:{{URL}}/index.php/api/signature/setupsignature
     */
    public function setupsignature(){
        $signatureId = input('param.signatureId');
        if(!$signatureId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $signature = Db::name('signature')->where('id','=',$signatureId)->find();
        if(!$signature){
            ajaxReturn(['code'=>301,'msg'=>'印章不存在，操作失败']);
        }
        $commonsignature = new Commonsignature();
        $commonsignature->setdefault($signatureId);
        ajaxReturn(['code'=>200,'msg'=>'操作成功']);
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月10月 16:28:42
     * ps:删除印章
     * url:{{URL}}/index.php/api/signature/delsignature
     */
    public function delsignature(){
        $signatureId = input('param.signatureId');
        if(!$signatureId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $signature = Db::name('signature')->where('id','=',$signatureId)->find();
        if(!$signature){
            ajaxReturn(['code'=>301,'msg'=>'印章不存在，操作失败']);
        }
        if($signature['default'] == 1){
            ajaxReturn(['code'=>302,'msg'=>'默认印章不允许删除']);
        }
        $commonsignature = new Commonsignature();
        $res = $commonsignature->delsignature($signatureId);
        if($res['code']==200){
            ajaxReturn(['code'=>200,'msg'=>'删除成功']);
        }else{
            ajaxReturn(['code'=>303,'msg'=>$res['msg']]);
        }
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年9月12月 17:41:50
     * ps:获取用户数字证书
     * url:{{URL}}/index.php/api/signature/getcertinfo
     */
    public function getcertinfo(){
        $type = input('param.type');
        $typeId = input('param.typeId');
        if(!$type){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        if(!$typeId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        $cert = Db::name('cert')->where('type','=',$type)->where('type_id','=',$typeId)->order('id desc')->find();
        if($cert){
            $url = $cert['certImg'];
        }else{
            $commonsignature = new Commonsignature();
            $url = $commonsignature->getcertinfo($type,$typeId);
            $cert = Db::name('cert')->where('type','=',$type)->where('type_id','=',$typeId)->order('id desc')->find();
        }
        $data['certNo'] = $cert['certNo'];
        $data['ownerName'] = $cert['ownerName'];
        $data['certCA'] = $cert['certCA'];
        $data['encryptionType'] = $cert['encryptionType'];
        $data['validPeriod'] = $cert['validPeriod'];
        $data['status'] = $cert['status'];
        $data['certImg'] = $cert['certImg'];


        ajaxReturn(['code'=>200,'msg'=>'获取成功','url'=>$url,'data'=>$data]);
    }

    /**
     * Created by PhpStorm.
     * User:lang
     * time:2024年11月12月 11:41:53
     * ps:印章授权
     * url:{{URL}}/index.php/api/signature/sealauthorize
     */
    public function sealauthorize(){
        $enterId = input('param.enterId');
        $customId = input('param.customId');
        $encustomlistId = input('param.encustomlistId');
        $sealId = input('param.signatureId');

        $starttime = input('param.starttime');
        $endtime = input('param.endtime');
        $url = input('param.url');

        if(!$enterId || !$customId || !$encustomlistId || !$sealId){
            ajaxReturn(['code'=>300,'msg'=>'缺少参数']);
        }
        if($starttime){
            $starttime .='000';
        }
        if($endtime){
            $endtime .='000';
        }
        $commonsignature = new Commonsignature();
        $res = $commonsignature->sealauthorize($enterId,$customId,$encustomlistId,$sealId,$starttime,$endtime,$url);
        if($res['code'] == 200){
            ajaxReturn(['code'=>200,'msg'=>'获取成功','url'=>$res['url ']]);
        }else{
            ajaxReturn(['code'=>301,'msg'=>'请求失败，请稍后重试']);
        }
    }
}